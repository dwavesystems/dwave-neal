version: 2.1

orbs:
  ocean: dwave/ocean@1.3
  win: circleci/windows@2.2.0

environment:
  PIP_PROGRESS_BAR: 'off'

jobs:
  test-linux:
    parameters:
      python-version:
        type: string

    docker:
      - image: circleci/python:<< parameters.python-version >>

    working_directory: ~/repo

    steps:
      - checkout

      - ocean/pip-install:
          requirements: tests/requirements.txt
          cache: true

      - ocean/pip-install:
          packages: .
          cache: false

      - ocean/coverage-run-unittest

  test-macos:
    parameters:
      python-version:
        type: string

    executor:
      name: ocean/macos
      xcode: "13.2.0"

    steps:
      - checkout

      - ocean/brew-install-pyenv

      - ocean/pyenv-install-python:
          python-version: << parameters.python-version >>
          cache: true

      - ocean/pip-install:
          requirements: tests/requirements.txt
          cache: true

      - ocean/pip-install:
          packages: .
          cache: false

      - ocean/coverage-run-unittest

  deploy:
    docker:
      - image: circleci/python:3.7

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: create virtual env
          command: |
            python -m venv env

      - run:
          name: verify version matches tag
          command: |
            . env/bin/activate
            pip install .
            echo $CIRCLE_TAG
            [[ "$(pip show dwave-neal 2>/dev/null | grep Version)" == "Version: $CIRCLE_TAG" ]]

      - run:
          name: build sdist and bdist
          command: |
            . env/bin/activate
            pip install -U pip setuptools wheel
            python setup.py sdist
            python setup.py bdist_wheel

      - run:
          name: upload
          command: |
            . env/bin/activate
            pip install twine
            twine check dist/*
            twine upload -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD" --skip-existing ./dist/*

workflows:
  version: 2

  test:
    jobs:
      - test-linux:
          matrix:
            parameters:
              python-version: &python-versions ["3.7.9", "3.8.9", "3.9.4", "3.10.0"]
      - test-macos:
          matrix:
            parameters:
              python-version: *python-versions

  deploy:
    jobs:
      - deploy:
          filters: &deploy-filters
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
